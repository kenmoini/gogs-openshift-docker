kind: ServiceAccount
apiVersion: v1
metadata:
  labels:
    app: gogs
  name: gogs-sa
---
kind: SecurityContextConstraints
apiVersion: security.openshift.io/v1
metadata:
  name: gogs-scc
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: true
allowedCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
fsGroup:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gogs-use-scc-role
rules:
  - apiGroups: ["security.openshift.io"]
    resources: ["securitycontextconstraints"]
    resourceNames: ["gogs-scc"]
    verbs: ["use"]
  - apiGroups: ["security.openshift.io"]
    resources: ["securitycontextconstraints"]
    resourceNames: ["anyuid"]
    verbs: ["use"]
  - apiGroups: ["security.openshift.io"]
    resources: ["securitycontextconstraints"]
    resourceNames: ["privileged"]
    verbs: ["use"]
  - apiGroups: ["security.openshift.io"]
    resources: ["securitycontextconstraints"]
    resourceNames: ["restricted"]
    verbs: ["use"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gogs-use-scc-rb
subjects:
  - kind: ServiceAccount
    name: gogs-sa
roleRef:
  kind: Role
  name: gogs-use-scc-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Service
apiVersion: v1
metadata:
  annotations:
    description: Exposes the database server
  name: gogs-postgresql
spec:
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432
  selector:
    name: gogs-postgresql
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    description: Defines how to deploy the database
  name: gogs-postgresql
  labels:
    app: gogs
    app.kubernetes.io/part-of: gogs
spec:
  replicas: 1
  selector:
    name: gogs-postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: gogs-postgresql
      name: gogs-postgresql
    spec:
      serviceAccountName: gogs-sa
      containers:
      - env:
        - name: POSTGRESQL_USER
          value: gogs
        - name: POSTGRESQL_PASSWORD
          value: gogs
        - name: POSTGRESQL_DATABASE
          value: gogs
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "100"
        - name: POSTGRESQL_SHARED_BUFFERS
          value: 12MB
        - name: POSTGRESQL_ADMIN_PASSWORD
          value: gogs
        image: ''
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: 5432
          timeoutSeconds: 1
        name: postgresql
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - psql -h 127.0.0.1 -U gogs -q -d gogs -c 'SELECT 1'
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: gogs-postgres-data
      volumes:
      - name: gogs-postgres-data
        emptyDir: {}
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - postgresql
      from:
        kind: ImageStreamTag
        name: postgresql:10
        namespace: openshift
    type: ImageChange
  - type: ConfigChange
---
kind: Service
apiVersion: v1
metadata:
  annotations:
    description: The Gogs server's http port
    service.alpha.openshift.io/dependencies: '[{"name":"gogs-postgresql","namespace":"","kind":"Service"}]'
  labels:
    app: gogs
  name: gogs
spec:
  ports:
  - name: 3000-tcp
    port: 3000
    protocol: TCP
    targetPort: 3000
  - name: 2222-tcp
    port: 2222
    protocol: TCP
    targetPort: 2222
  selector:
    app: gogs
    deploymentconfig: gogs
  sessionAffinity: None
  type: ClusterIP
---
kind: Route
apiVersion: route.openshift.io/v1
id: gogs-http
metadata:
  annotations:
    description: Route for application's http service.
  labels:
    app: gogs
  name: gogs
spec:
  host: gogs.apps.core-ocp.lab.kemo.network
  port:
    targetPort: 3000-tcp
  to:
    name: gogs
---
kind: Route
apiVersion: route.openshift.io/v1
id: gogs-ssh
metadata:
  annotations:
    description: Route for application's ssh service.
  labels:
    app: gogs
  name: gogs-ssh
spec:
  host: ssh-gogs.apps.core-ocp.lab.kemo.network
  port:
    targetPort: 2222-tcp
  to:
    name: gogs
---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  labels:
    app: gogs
    app.kubernetes.io/part-of: gogs
  name: gogs
spec:
  replicas: 1
  selector:
    app: gogs
    deploymentconfig: gogs
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gogs
        deploymentconfig: gogs
    spec:
      serviceAccountName: gogs-sa
      securityContext:
        runAsUser: 1
        runAsGroup: 1
      containers:
      - image: " "
        imagePullPolicy: Always
        env:
        - name: SOCAT_LINK
          value: "false"
        - name: RUN_CROND
          value: "false"
        name: gogs
        ports:
        - containerPort: 3000
          protocol: TCP
        - containerPort: 2222
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - name: gogs-data
          mountPath: /opt/gogs/data
        - name: gogs-config
          mountPath: /etc/gogs/conf
        readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
        livenessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: gogs-data
        emptyDir: {}
      - name: gogs-config
        configMap:
          name: gogs-config
          items:
            - key: app.ini
              path: app.ini
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - gogs
      from:
        kind: ImageStreamTag
        name: gogs:v0.12.4
    type: ImageChange
---
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  labels:
    app: gogs
  name: gogs
spec:
  tags:
  - name: "v0.12.4"
    from:
      kind: DockerImage
      name: quay.io/kenmoini/gogs-ubi:v0.12.4
    importPolicy: {}
    annotations:
      description: The Gogs git server docker image
      tags: gogs,go,golang
      version: "v0.12.4"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: gogs-config
  labels:
    app: gogs
data:
  app.ini: |
    APP_NAME = Gogs
    RUN_USER = git
    RUN_MODE = prod

    [repository]
    ROOT                      = /home/git/gogs-repositories
    SCRIPT_TYPE               = bash
    ANSI_CHARSET              =
    FORCE_PRIVATE             = false
    MAX_CREATION_LIMIT        = -1
    MIRROR_QUEUE_LENGTH       = 1000
    PULL_REQUEST_QUEUE_LENGTH = 1000
    PREFERRED_LICENSES        = Apache License 2.0,MIT License

    [repository.editor]
    LINE_WRAP_EXTENSIONS   = .txt,.md,.markdown,.mdown,.mkd,
    PREVIEWABLE_FILE_MODES = markdown

    [repository.upload]
    ENABLED       = true
    TEMP_PATH     = data/tmp/uploads
    ALLOWED_TYPES =
    FILE_MAX_SIZE = 3
    MAX_FILES     = 5

    [ui]
    EXPLORE_PAGING_NUM    = 20
    ISSUE_PAGING_NUM      = 10
    FEED_MAX_COMMIT_NUM   = 5
    THEME_COLOR_META_TAG  = `#ff5343`
    MAX_DISPLAY_FILE_SIZE = 8388608

    [ui.admin]
    USER_PAGING_NUM   = 50
    REPO_PAGING_NUM   = 50
    NOTICE_PAGING_NUM = 25
    ORG_PAGING_NUM    = 50

    [ui.user]
    REPO_PAGING_NUM = 15

    [markdown]
    ENABLE_HARD_LINE_BREAK = false
    CUSTOM_URL_SCHEMES     =
    FILE_EXTENSIONS        = .md,.markdown,.mdown,.mkd

    [server]
    PROTOCOL               = http
    DOMAIN                 = gogs.apps.core-ocp.lab.kemo.network
    ROOT_URL               = http://gogs.apps.core-ocp.lab.kemo.network
    HTTP_ADDR              = 0.0.0.0
    HTTP_PORT              = 3000
    UNIX_SOCKET_PERMISSION = 666
    LOCAL_ROOT_URL         = %(PROTOCOL)s://%(HTTP_ADDR)s:%(HTTP_PORT)s/
    DISABLE_SSH            = false
    START_SSH_SERVER       = false
    SSH_DOMAIN             = ssh-gogs.apps.core-ocp.lab.kemo.network
    SSH_DOMAIN             = %(DOMAIN)s
    SSH_PORT               = 2222
    SSH_LISTEN_PORT        = %(SSH_PORT)s
    SSH_ROOT_PATH          =
    SSH_KEY_TEST_PATH      =
    SSH_KEYGEN_PATH        = ssh-keygen
    MINIMUM_KEY_SIZE_CHECK = false
    OFFLINE_MODE           = false
    DISABLE_ROUTER_LOG     = false
    STATIC_ROOT_PATH       =
    APP_DATA_PATH          = data
    ENABLE_GZIP            = false
    LANDING_PAGE           = home

    [ssh.minimum_key_sizes]
    ED25519 = 256
    ECDSA   = 256
    RSA     = 2048
    DSA     = 1024

    [database]
    DB_TYPE  = postgres
    HOST     = gogs-postgresql:5432
    NAME     = gogs
    USER     = gogs
    PASSWD   = gogs
    SSL_MODE = disable
    PATH     = data/gogs.db

    [admin]

    [security]
    INSTALL_LOCK                      = true
    SECRET_KEY                        = fkjud75jfmfm
    LOGIN_REMEMBER_DAYS               = 7
    COOKIE_USERNAME                   = gogs_awesome
    COOKIE_REMEMBER_NAME              = gogs_incredible
    REVERSE_PROXY_AUTHENTICATION_USER = X-WEBAUTH-USER

    [service]
    ACTIVE_CODE_LIVE_MINUTES               = 180
    RESET_PASSWD_CODE_LIVE_MINUTES         = 180
    REGISTER_EMAIL_CONFIRM                 = false
    DISABLE_REGISTRATION                   = false
    REQUIRE_SIGNIN_VIEW                    = false
    ENABLE_NOTIFY_MAIL                     = false
    ENABLE_REVERSE_PROXY_AUTHENTICATION    = false
    ENABLE_REVERSE_PROXY_AUTO_REGISTRATION = false
    ENABLE_CAPTCHA                         = false

    [webhook]
    QUEUE_LENGTH    = 1000
    DELIVER_TIMEOUT = 5
    PAGING_NUM      = 10
    SKIP_TLS_VERIFY = true

    [mailer]
    ENABLED                 = false
    SEND_BUFFER_LEN         = 100
    SUBJECT                 = %(APP_NAME)s
    HOST                    =
    DISABLE_HELO            =
    HELO_HOSTNAME           =
    SKIP_VERIFY             =
    USE_CERTIFICATE         = false
    CERT_FILE               = custom/mailer/cert.pem
    KEY_FILE                = custom/mailer/key.pem
    FROM                    =
    USER                    =
    PASSWD                  =
    ENABLE_HTML_ALTERNATIVE = false

    [cache]
    ADAPTER  = memory
    INTERVAL = 60
    HOST     =

    [session]
    PROVIDER          = file
    PROVIDER_CONFIG   = data/sessions
    COOKIE_NAME       = i_like_gogits
    COOKIE_SECURE     = false
    ENABLE_SET_COOKIE = true
    GC_INTERVAL_TIME  = 86400
    SESSION_LIFE_TIME = 86400

    [picture]
    AVATAR_UPLOAD_PATH      = data/avatars
    GRAVATAR_SOURCE         = gravatar
    DISABLE_GRAVATAR        = false
    ENABLE_FEDERATED_AVATAR = false

    [attachment]
    ENABLE        = true
    PATH          = data/attachments
    ALLOWED_TYPES = image/jpeg|image/png
    MAX_SIZE      = 4
    MAX_FILES     = 5

    [time]
    FORMAT =

    [log]
    ROOT_PATH  = /var/log/gogs
    MODE       = console, file
    BUFFER_LEN = 10000
    LEVEL      = Info

    [log.console]
    LEVEL =

    [log.file]
    LEVEL          =
    LOG_ROTATE     = true
    MAX_LINES      = 1000000
    MAX_SIZE_SHIFT = 28
    DAILY_ROTATE   = true
    MAX_DAYS       = 7

    [log.conn]
    LEVEL            =
    RECONNECT_ON_MSG = false
    RECONNECT        = false
    PROTOCOL         = tcp
    ADDR             =

    [log.smtp]
    LEVEL     =
    SUBJECT   = Diagnostic message from server
    HOST      =
    USER      =
    PASSWD    =
    RECEIVERS =

    [log.database]
    LEVEL  =
    DRIVER =
    CONN   =

    [cron]
    ENABLED      = true
    RUN_AT_START = false

    [cron.update_mirrors]
    SCHEDULE = @every 10m

    [cron.repo_health_check]
    SCHEDULE = @every 24h
    TIMEOUT  = 60s
    ARGS     =

    [cron.check_repo_stats]
    RUN_AT_START = true
    SCHEDULE     = @every 24h

    [git]
    DISABLE_DIFF_HIGHLIGHT       = false
    MAX_GIT_DIFF_LINES           = 1000
    MAX_GIT_DIFF_LINE_CHARACTERS = 500
    MAX_GIT_DIFF_FILES           = 100
    GC_ARGS                      =

    [git.timeout]
    MIGRATE = 600
    MIRROR  = 300
    CLONE   = 300
    PULL    = 300
    GC      = 60

    [mirror]
    DEFAULT_INTERVAL = 8

    [api]
    MAX_RESPONSE_ITEMS = 50

    [i18n]
    LANGS = en-US,zh-CN,zh-HK,zh-TW,de-DE,fr-FR,nl-NL,lv-LV,ru-RU,ja-JP,es-ES,pt-BR,pl-PL,bg-BG,it-IT,fi-FI,tr-TR,cs-CZ
    NAMES = English,简体中文,繁體中文（香港）,繁體中文（台湾）,Deutsch,Français,Nederlands,Latviešu,Русский,日本語,Español,Português do Brasil,Polski,български,Italiano,Suomalainen,Türkçe,čeština

    [i18n.datelang]
    en-US = en
    zh-CN = zh
    zh-HK = zh-TW
    zh-TW = zh-TW
    de-DE = de
    fr-FR = fr
    nl-NL = nl
    lv-LV = lv
    ru-RU = ru
    ja-JP = ja
    es-ES = es
    pt-BR = pt-BR
    pl-PL = pl
    bg-BG = bg
    it-IT = it
    fi-FI = fi
    tr-TR = tr
    cs-CZ = cs-CZ

    [highlight.mapping]

    [other]
    SHOW_FOOTER_BRANDING           = false
    SHOW_FOOTER_VERSION            = true
    SHOW_FOOTER_TEMPLATE_LOAD_TIME = true